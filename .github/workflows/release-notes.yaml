on:
  release:
    types: [published, unpublished, created, edited, deleted, released]

jobs:
  build_notes:
    runs-on: ubuntu-latest
    name: Release new version
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Publish to the docs dir on main after any change to releases
      - name: Check out main branch again for docs
        run: git fetch && git checkout main

      # NOTE: I don't paginate, so once we get 100 releases some history will drop off.
      # This should be only used for "api" requests, so hopefully okay...
      - name: Get api data for releases
        uses: octokit/request-action@v2.x
        id: release_api_data
        with:
          route: GET /repos/cppchriscpp/create-nes-game/releases
          owner: cppchriscpp
          repo: create-nes-game
          per_page: 100
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Testing output"
        run: |
          cat > temp.json <<'EOF'
          ${{ steps.release_api_data.outputs.data }}
          EOF
      - name: "Parsing out useful info"
        run: |
          node -e "require('fs').writeFileSync('docs/release-notes.json', 
          JSON.stringify(
            require('temp.json').map(rel => ({
              url: rel.url, 
              id: rel.id, 
              tag_name: rel.tag_name, 
              name: rel.name,
              assets: rel.assets.map(a => ({url: a.url, name: a.name, id: a.id, size: a.size, download_url: a.browser_download_url})),
              body: rel.body,
              tar_url: rel.tarball_url,
              zip_url: rel.zipball_url
            })
          ))"
      - name: Remove temp file
        run: rm temp.json


      - name: "Update github docs in main branch"
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Automated documentation push
          file_pattern: docs/*
          

