on:
  push:
    tags: 
      - v*

jobs:
  build_tool:
    runs-on: ubuntu-latest
    name: Update package.json, build everything, run an integration test, rewrite docs, then finally publish to gh and docker
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install all the stuff
        run: npm install
      - name: Set version variable
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: update package.json with new version
        run: npm version from-git --no-git-tag-version
      - name: Build everything
        run: npm run build-all
      - name: Copy README.md into docs directory to update docs
        run: cp -f README.md docs/README.
      - name: Update version for site
        run: npm run rewrite-site-version

      - name: Start xvfb 
        run: sudo Xvfb :99 -screen 0 1280x1024x24 &
      - name: Run unit tests
        run: DISPLAY=:99 npm run full-integration-test
      - name: Clean up xvfb
        uses: bcomnes/cleanup-xvfb@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: cppchriscpp/create-nes-game:latest cppchriscpp/create-nes-game:$RELEASE_VERSION

      - name: Release to github
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            dist/*.tar.gz
            dist/*.zip
        name: "Update github docs in main branch"
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Automated documentation push for release $RELEASE_VERSION
          file_pattern: docs/*
          

